/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vtenda;

import java.awt.Image;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DAW221
 */
public class PaAnadirCategoria extends javax.swing.JDialog {

    public DefaultTableModel modelo;
    
    public PaAnadirCategoria(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        Image icono = new ImageIcon(getClass().getResource(VTenda.dirIMG)).getImage();
        this.setIconImage(icono);
        
        this.setLocationRelativeTo(null);
        
        String cabecera[]={"Codigo", "Nombre"};
        String datos[][]={};
        
        modelo = new DefaultTableModel(datos, cabecera);
        this.categorias.setModel(modelo);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        volver = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        nomCategoria = new javax.swing.JTextField();
        jLCategoria = new javax.swing.JLabel();
        anadir = new javax.swing.JButton();
        errores = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        categorias = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("VTenda - Añadir Categorias");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        volver.setBackground(new java.awt.Color(204, 204, 204));
        volver.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        volver.setText("Volver");
        volver.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverActionPerformed(evt);
            }
        });

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        nomCategoria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nomCategoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nomCategoriaKeyPressed(evt);
            }
        });

        jLCategoria.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLCategoria.setText("Nombre Categoria:");

        anadir.setBackground(new java.awt.Color(204, 204, 204));
        anadir.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        anadir.setText("+ Añadir");
        anadir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        anadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anadirActionPerformed(evt);
            }
        });

        errores.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(anadir, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(errores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nomCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(anadir, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(errores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        categorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        categorias.setEnabled(false);
        jScrollPane1.setViewportView(categorias);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(volver, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(volver, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverActionPerformed
        dispose();
    }//GEN-LAST:event_volverActionPerformed

    private void anadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anadirActionPerformed
        
        if(this.nomCategoria.getText().isEmpty()){
            this.errores.setText("Porfavor rellene el nombre de la categoría");
        }
        else{
        
            try{
                
                boolean encontrado = false;
                
                /*Conexion contra DB*/
                db.consultas con = new db.consultas();

                /* Buscar Categorias */
                ResultSet rs = con.select("categorias", "1 ORDER BY 'cod' ASC");
                
                while(rs.next()){

                    if(this.nomCategoria.getText().compareToIgnoreCase(rs.getString("nombre")) == 0){
                        
                        encontrado = true;
                    
                    }

                }
                
                if(encontrado == true){
                    System.err.println("La categoria se encuentra repetida");
                    this.errores.setText("La categoria está repetida");
                }
                else{
                    
                    System.out.println("Creando nueva categoria");
                    
                    String nombre = Character.toUpperCase(this.nomCategoria.getText().charAt(0)) + this.nomCategoria.getText().substring(1); 
                    
                    /* Insertar Categorias */
                    con.insert("categorias", "nombre", "'"+nombre+"'");
                    
                    this.nomCategoria.setText("");
                    
                    /* Buscar Categorias */
                    rs = con.select("categorias", "nombre = '"+nombre+"'");
                    
                    while(rs.next()){
                        
                        System.out.println("Añadiendo fila");
                        
                        Object Datos[]={rs.getInt("cod"), rs.getString("nombre")};
                        modelo.addRow(Datos);
                    
                    }
                
                }
                

            }
            catch(SQLException ex){
                this.errores.setText("Lo sentimos no podemos conectar con la base de datos");
                System.err.println("Error al conectar con la DB");
            }
        
        }
        
        
    }//GEN-LAST:event_anadirActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        try{
            
            System.out.println("Limpiando Lista");
            
            /*Limpar Lista*/
            int a=modelo.getRowCount();
            
            for (int i = 0; i < a; i++) {
                modelo.removeRow(0);
            }
            
        }catch(Exception ex){
            System.err.println("Error al borrar la lista");
        }
        
        try{
            
            /*Conexion contra DB*/
            db.consultas con = new db.consultas();
            
            /* Contar Categorias */
            System.out.println("Buscando Categorias");
            ResultSet rs = con.select("categorias", "1 ORDER BY categorias.cod ASC");
            
            while(rs.next()){
                
                Object Datos[]={rs.getInt("cod"), rs.getString("nombre")};
                modelo.addRow(Datos);
            
            }
            
        }
        catch(SQLException ex){
            this.errores.setText("Lo sentimos no podemos conectar con la base de datos");
            System.err.println("Error al conectar con la DB");
        }
        
    }//GEN-LAST:event_formWindowOpened

    private void nomCategoriaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomCategoriaKeyPressed
        
        /*Evento para tecla ENTER*/
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
        
            if(this.nomCategoria.getText().isEmpty()){
                this.errores.setText("Porfavor rellene el nombre de la categoría");
            }
            else{

                try{

                    boolean encontrado = false;

                    /*Conexion contra DB*/
                    db.consultas con = new db.consultas();

                    /* Buscar Categorias */
                    ResultSet rs = con.select("categorias", "1 ORDER BY 'cod' ASC");

                    while(rs.next()){

                        if(this.nomCategoria.getText().compareToIgnoreCase(rs.getString("nombre")) == 0){

                            encontrado = true;

                        }

                    }

                    if(encontrado == true){
                        System.err.println("La categoria se encuentra repetida");
                        this.errores.setText("La categoria está repetida");
                    }
                    else{

                        System.out.println("Creando nueva categoria");

                        String nombre = Character.toUpperCase(this.nomCategoria.getText().charAt(0)) + this.nomCategoria.getText().substring(1); 

                        /* Insertar Categorias */
                        con.insert("categorias", "nombre", "'"+nombre+"'");

                        this.nomCategoria.setText("");

                        /* Buscar Categorias */
                        rs = con.select("categorias", "nombre = '"+nombre+"'");

                        while(rs.next()){

                            System.out.println("Añadiendo fila");

                            Object Datos[]={rs.getInt("cod"), rs.getString("nombre")};
                            modelo.addRow(Datos);

                        }

                    }


                }
                catch(SQLException ex){
                    this.errores.setText("Lo sentimos no podemos conectar con la base de datos");
                    System.err.println("Error al conectar con la DB");
                }

            }
        
        }
        
    }//GEN-LAST:event_nomCategoriaKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaAnadirCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaAnadirCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaAnadirCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaAnadirCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PaAnadirCategoria dialog = new PaAnadirCategoria(new javax.swing.JDialog(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton anadir;
    private javax.swing.JTable categorias;
    private javax.swing.JLabel errores;
    private javax.swing.JLabel jLCategoria;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nomCategoria;
    private javax.swing.JButton volver;
    // End of variables declaration//GEN-END:variables
}
