/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vtenda;

import java.awt.Image;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import javax.swing.ImageIcon;

/**
 *
 * @author MANU
 */
public class PaCambioContrasena extends javax.swing.JDialog {

    /**
     * Creates new form PaCambioContrasena
     */
    public PaCambioContrasena(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        Image icono = new ImageIcon(getClass().getResource(VTenda.dirIMG)).getImage();
        this.setIconImage(icono);
        this.setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLPassA = new javax.swing.JLabel();
        passA = new javax.swing.JPasswordField();
        jLPass1 = new javax.swing.JLabel();
        pass1 = new javax.swing.JPasswordField();
        jLPass2 = new javax.swing.JLabel();
        pass2 = new javax.swing.JPasswordField();
        errores = new javax.swing.JLabel();
        cambiar = new javax.swing.JButton();
        volver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("VTenda - Cambio Contraseña");
        setResizable(false);

        jLPassA.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLPassA.setText("Contraseña Actual:");

        passA.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLPass1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLPass1.setText("Contraseña Nueva:");

        pass1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLPass2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLPass2.setText("Repetir Contraseña Nueva:");

        pass2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pass2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pass2KeyPressed(evt);
            }
        });

        errores.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        cambiar.setBackground(new java.awt.Color(204, 204, 204));
        cambiar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cambiar.setText("Cambiar");
        cambiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambiarActionPerformed(evt);
            }
        });

        volver.setBackground(new java.awt.Color(204, 204, 204));
        volver.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        volver.setText("Volver");
        volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pass2)
                    .addComponent(pass1)
                    .addComponent(passA)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLPassA, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLPass1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLPass2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 118, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(volver, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cambiar, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(errores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLPassA, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLPass1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pass1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLPass2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pass2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(errores, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cambiar)
                    .addComponent(volver))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cambiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cambiarActionPerformed
        
        Encriptar antigua = new Encriptar(this.passA.getText());
        Encriptar nueva = new Encriptar(this.pass1.getText());
                
        if(this.passA.getText().isEmpty()||this.pass1.getText().isEmpty()||this.pass2.getText().isEmpty()){
            
            this.errores.setText("Rellene los campos");
                
        }
        else if(this.pass1.getText().compareTo(this.pass2.getText()) == 1){
            
            this.errores.setText("La confirmacion tiene que ser igual");
        
        }
        else if(this.passA.getText().compareTo(this.pass1.getText()) == 0){
            
            this.errores.setText("La contraseña antigua es igual a la nueva");
            
        }
        else if(this.pass1.getText().length() <= 8){
            
            this.errores.setText("La contraseña tiene que ser mayor de 8 caracteres");
            
        }
        else if(antigua.getCifer().compareTo(VTenda.contrasena) == 0){
            
            try{
                
                /*Conexion contra DB*/
                db.consultas con = new db.consultas();

                /* Cambio contraseña */
                con.update("usuarios", "contrasena = '"+nueva.getCifer()+"'", "usuario = '"+VTenda.usuario+"'");
                    
                this.errores.setText("Contraseña cambiada con exito");
                System.out.println("Contraseña cambiada con exito");
                
            }
            catch(SQLException ex){
                this.errores.setText("Acabamos de sufrir un error");
                System.err.println("Error al cambiar contraseña problema con DB");
            }
            
            
        }
        else{
            this.errores.setText("La contraseña actual no es correcta");
        }
        
        
    }//GEN-LAST:event_cambiarActionPerformed

    private void pass2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pass2KeyPressed
        
        /*Evento para tecla ENTER*/
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            
            Encriptar en = new Encriptar(this.pass1.getText());

            if(this.passA.getText().isEmpty()||this.pass1.getText().isEmpty()||this.pass2.getText().isEmpty()){

                this.errores.setText("Rellene los campos");

            }
            else if(this.pass1.getText().compareTo(this.pass2.getText()) == 1){

                this.errores.setText("La confirmacion tiene que ser igual");

            }
            else if(this.passA.getText().compareTo(this.pass1.getText()) == 0){

                this.errores.setText("La contraseña antigua es igual a la nueva");

            }
            else if(this.pass1.getText().length() <= 8){

                this.errores.setText("La contraseña tiene que ser mayor de 8 caracteres");

            }
            else if(en.getCifer().compareTo(VTenda.contrasena) == 0){

                try{



                    /*Conexion contra DB*/
                    db.consultas con = new db.consultas();

                    /* Cambio contraseña */
                    con.update("usuarios", "contrasena = '"+en.getCifer()+"'", "usuario = '"+VTenda.usuario+"'");


                    this.errores.setText("Contraseña cambiada con exito");
                    System.out.println("Contraseña cambiada con exito");

                }
                catch(SQLException ex){
                    this.errores.setText("Acabamos de sufrir un error");
                    System.err.println("Error al cambiar contraseña problema con DB");
                }


            }
            else{

                this.errores.setText("La contraseña actual no es correcta");

            }
        
        }
        
    }//GEN-LAST:event_pass2KeyPressed

    private void volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverActionPerformed
        dispose();
    }//GEN-LAST:event_volverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaCambioContrasena.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaCambioContrasena.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaCambioContrasena.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaCambioContrasena.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PaCambioContrasena dialog = new PaCambioContrasena(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cambiar;
    private javax.swing.JLabel errores;
    private javax.swing.JLabel jLPass1;
    private javax.swing.JLabel jLPass2;
    private javax.swing.JLabel jLPassA;
    private javax.swing.JPasswordField pass1;
    private javax.swing.JPasswordField pass2;
    private javax.swing.JPasswordField passA;
    private javax.swing.JButton volver;
    // End of variables declaration//GEN-END:variables
}
