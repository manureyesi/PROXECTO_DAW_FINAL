/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vtenda;

import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DAW221
 */
public class PaAnadirProductos extends javax.swing.JDialog {

    public DefaultTableModel modelo;
    public static int salir = 0;
    
    public static String dir_img1;
    public static String dir_img2;
    public static String nombre_img;

    
    public PaAnadirProductos(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        Image icono = Toolkit.getDefaultToolkit().getImage(VTenda.dirIMG);
        this.setIconImage(icono);
        this.setLocationRelativeTo(null);
        
        String cabecera[]={"Artículo", "Nombre", "Categoría", "Stock", "Sin IVA", "IVA", "Con IVA"};
        String datos[][]={};
        
        modelo = new DefaultTableModel(datos, cabecera);
        this.productos.setModel(modelo);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLCArticulo = new javax.swing.JLabel();
        codArticulo = new javax.swing.JTextField();
        jLNArticulo = new javax.swing.JLabel();
        nomArticulo = new javax.swing.JTextField();
        jLPrecioSIVA = new javax.swing.JLabel();
        precio = new javax.swing.JTextField();
        jLCategoria = new javax.swing.JLabel();
        categoria = new javax.swing.JComboBox<>();
        jLStock = new javax.swing.JLabel();
        stock = new javax.swing.JSpinner();
        anadir = new javax.swing.JButton();
        errores = new javax.swing.JLabel();
        jLDescripcion = new javax.swing.JLabel();
        descripcion = new javax.swing.JTextField();
        jLImagenes = new javax.swing.JLabel();
        img1 = new javax.swing.JTextField();
        btn_img1 = new javax.swing.JButton();
        img2 = new javax.swing.JTextField();
        btn_img2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productos = new javax.swing.JTable();
        volver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("VTenda - Añadir");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLCArticulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLCArticulo.setText("Codigo Artículo:");

        codArticulo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLNArticulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLNArticulo.setText("Nombre Artículo:");

        nomArticulo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLPrecioSIVA.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLPrecioSIVA.setText("Precio sin IVA:");

        precio.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLCategoria.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLCategoria.setText("Categoría:");

        categoria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLStock.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLStock.setText("Stock:");

        stock.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        stock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                stockKeyPressed(evt);
            }
        });

        anadir.setBackground(new java.awt.Color(204, 204, 204));
        anadir.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        anadir.setText(" + Añadir");
        anadir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        anadir.setEnabled(false);
        anadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anadirActionPerformed(evt);
            }
        });

        errores.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLDescripcion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLDescripcion.setText("Descripción del producto:");

        descripcion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLImagenes.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLImagenes.setText("Imagenes:");

        img1.setEditable(false);
        img1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btn_img1.setBackground(new java.awt.Color(204, 204, 204));
        btn_img1.setText("Seleccionar");
        btn_img1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_img1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_img1ActionPerformed(evt);
            }
        });

        img2.setEditable(false);
        img2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btn_img2.setBackground(new java.awt.Color(204, 204, 204));
        btn_img2.setText("Seleccionar");
        btn_img2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_img2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_img2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(anadir, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                                .addComponent(errores, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLImagenes)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLDescripcion)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLCArticulo)
                                                .addComponent(codArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(18, 18, 18)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLNArticulo)
                                                .addComponent(nomArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(descripcion)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(precio, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLPrecioSIVA))
                                            .addGap(18, 18, 18)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLCategoria)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(categoria, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18)
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLStock)
                                                        .addComponent(stock, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(img1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_img1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(img2, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_img2)
                        .addGap(39, 39, 39))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLCArticulo)
                    .addComponent(jLNArticulo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nomArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLDescripcion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLPrecioSIVA)
                    .addComponent(jLCategoria)
                    .addComponent(jLStock))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(stock, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(categoria, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(precio, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLImagenes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_img1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(img1, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(anadir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(errores, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_img2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(img2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        productos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Título 5", "Título 6", "Título 7"
            }
        ));
        productos.setCellSelectionEnabled(true);
        productos.setEnabled(false);
        jScrollPane1.setViewportView(productos);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        volver.setBackground(new java.awt.Color(204, 204, 204));
        volver.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        volver.setText("Volver");
        volver.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(volver, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(volver, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
        try{
            System.out.println("Buscando Categorias");
            
            int itemCount = categoria.getItemCount();

            for(int i=0;i<itemCount;i++){
                categoria.removeItemAt(0);
            }
            
            /* Introducir categoria */
            this.categoria.addItem("Seleccione:");            
            
            /* Consulta */
            db.consultas con = new db.consultas();
            
            ResultSet rs = con.select("categorias", "1 ORDER BY 'cod' ASC");
            
            int cont = 0;
            
            while(rs.next()){
                this.categoria.addItem(rs.getString("nombre"));
                cont++;
            }
            
            if(cont == 0){
                
                System.err.println("No existen categorias");
                this.errores.setText("Lo sentimos no tiene ninguna categoria creada.");
                
                switch(PaAnadirProductos.salir){
                    
                    case 0:
                        errores.errorCategoria PaAvisoCategoria = new errores.errorCategoria(new javax.swing.JDialog(), true);
                        PaAvisoCategoria.setVisible(true);
                    break;
                    
                    case 1:
                        PaAnadirProductos.salir =0;
                        PaAnadirCategoria PaAnadirCategoria = new PaAnadirCategoria(new javax.swing.JDialog(), true);
                        PaAnadirCategoria.setVisible(true);                     
                    break;
                    
                    case 2:
                        PaAnadirProductos.salir =0;
                        dispose();
                    break;
                
                }
                
               
            }
            else{
                this.anadir.setEnabled(true);
            }
            
        }
        catch(SQLException ex){
            
            System.err.println("Error de Base de Datos");
            
            errores.errorConexion errorConexion = new errores.errorConexion(new javax.swing.JDialog(), true);
            errorConexion.setVisible(true);
            
            dispose();
            
        }
        
    }//GEN-LAST:event_formWindowActivated

    private void anadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anadirActionPerformed
        
        try{
            double preci = 0;
            try{
                /*Introducir datos en clase*/
                preci = Double.parseDouble(this.precio.getText());
            }
            catch(NumberFormatException ex){
                this.errores.setText("Lo sentimos, compruebe los campos numericos");
                System.err.println("Error de campos numericos");
            }
            
            Productos p1 = new Productos();

            /*Comprobar errores*/
            if(this.codArticulo.getText().isEmpty()||this.nomArticulo.getText().isEmpty()||this.precio.getText().isEmpty()||this.descripcion.getText().isEmpty()){

                this.errores.setText("Comprueba que relleno todos los campos");

            }
            else if((String)categoria.getSelectedItem() == "Seleccione:"){
                this.errores.setText("Elija una categoria para este producto");
            }
            else if(preci <= 0){
                this.errores.setText("Lo sentimos, el precio tiene que ser superior a 0");
            }
            else{
                
                System.out.println("Pasada comprobación de errores");
                
                int error = 0;
                
                /* Controlar error de paso a Double */
                try{
                /*Introducir datos en clase*/
                        p1.setCodArticulo(this.codArticulo.getText());
                        p1.setNomeArticulo(this.nomArticulo.getText());
                        p1.setPrecioSin(Double.parseDouble(this.precio.getText()));
                }
                catch(NumberFormatException ex){
                    this.errores.setText("Lo sentimos, compruebe los campos numericos");
                    error = 1;
                }

                int value=(int)this.stock.getValue();

                if(value==0){
                    p1.setStock(1);
                }
                else{
                    p1.setStock(value);
                }

                /* Declarar clase para consultas */
                db.consultas con = new db.consultas();
                
                /*Consulta buscar codigo repetido productos da tenda*/
                ResultSet rs = con.select("productos", "cod = '"+this.codArticulo.getText()+"'");
                
                while(rs.next()){

                    if(this.codArticulo.getText().compareTo(rs.getString("cod")) == 0 ){
                        error = 2;
                    }

                }

                switch (error) {
                    
                    case 0:
                        
                        // Subir IMG                    
                        if(!this.img1.getText().isEmpty()){
                            
                            this.nombre_img = this.nomArticulo.getText().replace(' ', '_');
                            
                            this.dir_img1 = this.img1.getText();
                            
                            if(!this.img2.getText().isEmpty()){
                            
                                this.dir_img2 = this.img2.getText();
                            
                            }
                            
                            SFTP.SFTP subirArchivo = new SFTP.SFTP();
                                    try {
                                        subirArchivo.subirArchivo();
                                    } catch (Exception ex) {
                                        System.err.println("Error");
                                    }
                            
                            Thread thread = new Thread(){
                                public void run(){
                                        
                                   SFTP.SubirIMG img1 = new SFTP.SubirIMG("_1.png", "C:/Users/MANU/Pictures/harry-popoter.jpg");
                                   
                                   if(!dir_img2.equalsIgnoreCase("")){
                                       
                                       //SFTP.SubirIMG img2 = new SFTP.SubirIMG(nombre_img+"_2.png", dir_img2);
                                       
                                   }
                                       
                                }
                            };
                                
                            thread.start();
                        
                        }
                        
                        
                        /* Consulta codCategoria */
                        rs = con.select("categorias", "nombre = '"+(String)categoria.getSelectedItem()+"'");
                        
                        int codCategoria = 0;
                        
                        while(rs.next()){
                            
                            codCategoria = rs.getInt("cod");
                            
                        }   
                        
                        String cod=this.codArticulo.getText();
                        String nome=this.nomArticulo.getText();
                        int val=(int)this.stock.getValue();
                        String Stock;
                        
                        if(val<=0){
                            Stock="1";
                        }
                        else{
                            Stock=val+"";
                        }   
                        
                        double iv=Double.parseDouble(this.precio.getText())*0.21;
                        
                        Redondear rd = new Redondear();
                        
                        double fin =rd.redondearDecimales(iv);
                        String iva=fin+"";
                        double SinIVA=Double.parseDouble(this.precio.getText());
                        String ConIVA=(Double.parseDouble(this.precio.getText())+fin)+"";
                        
                        /*Insertar datos Productos*/
                        System.out.println("Insertando producto en DB");
                        
                        con.insert("productos", "cod, nombre, descripcion, codCategoria, precioSin, stock", "'"+cod+"', "+"'"+nome+"', "+"'"+this.descripcion.getText()+"', "+" "+codCategoria+", "+SinIVA+", "+Stock);

                        Object Datos[]={cod, nome,(String)categoria.getSelectedItem(), Stock, SinIVA, iva, ConIVA};
                        modelo.addRow(Datos);
                        
                        this.errores.setText("");
                        this.codArticulo.setText("");
                        this.nomArticulo.setText("");
                        this.precio.setText("");
                        this.stock.setValue(0);
                        this.descripcion.setText("");
                        this.img1.setText("");
                        this.img2.setText("");
                        
                    break;
                    
                    case 1:
                        
                        this.errores.setText("Lo sentimos, compruebe los campos númerico");
                        System.err.println("Error de campos numericos");
                        
                    break;
                    
                    case 2:
                        
                        this.errores.setText("El código de artículo se encuentra repetido");
                        this.codArticulo.setText("");
                        System.err.println("El cod Articulo esta repetido");
                        
                    break;
                    
                    
                }

            }
            
        }catch(SQLException ex){
            this.errores.setText("Lo sentimos, acabamos de sufrir un error");
            System.err.println("Error en Añadir Productos");
        }
        
    }//GEN-LAST:event_anadirActionPerformed

    private void stockKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stockKeyPressed
        
        /*Evento para tecla ENTER*/
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
        
            try{
                double preci = 0;
                try{
                    /*Introducir datos en clase*/
                    preci = Double.parseDouble(this.precio.getText());
                }
                catch(NumberFormatException ex){
                    this.errores.setText("Lo sentimos, compruebe los campos numericos");
                    System.err.println("Error de campos numericos");
                }

                Productos p1 = new Productos();

                /*Comprobar errores*/
                if(this.codArticulo.getText().isEmpty()||this.nomArticulo.getText().isEmpty()||this.precio.getText().isEmpty()||this.descripcion.getText().isEmpty()){

                    this.errores.setText("Comprueba que relleno todos los campos");

                }
                else if((String)categoria.getSelectedItem() == "Seleccione:"){
                    this.errores.setText("Elija una categoria para este producto");
                }
                else if(preci <= 0){
                    this.errores.setText("Lo sentimos, el precio tiene que ser superior a 0");
                }
                else{

                    System.out.println("Pasada comprobación de errores");

                    int error = 0;

                    /* Controlar error de paso a Double */
                    try{
                    /*Introducir datos en clase*/
                            p1.setCodArticulo(this.codArticulo.getText());
                            p1.setNomeArticulo(this.nomArticulo.getText());
                            p1.setPrecioSin(Double.parseDouble(this.precio.getText()));
                    }
                    catch(NumberFormatException ex){
                        this.errores.setText("Lo sentimos, compruebe los campos numericos");
                        error = 1;
                    }

                    int value=(int)this.stock.getValue();

                    if(value==0){
                        p1.setStock(1);
                    }
                    else{
                        p1.setStock(value);
                    }

                    /* Declarar clase para consultas */
                    db.consultas con = new db.consultas();

                    /*Consulta buscar codigo repetido productos da tenda*/
                    ResultSet rs = con.select("productos", "cod = '"+this.codArticulo.getText()+"'");

                    while(rs.next()){

                        if(this.codArticulo.getText().compareTo(rs.getString("cod")) == 0 ){
                            error = 2;
                        }

                    }

                    switch (error) {

                        case 0:
                            /* Consulta codCategoria */
                            rs = con.select("categorias", "nombre = '"+(String)categoria.getSelectedItem()+"'");

                            int codCategoria = 0;

                            while(rs.next()){

                                codCategoria = rs.getInt("cod");

                            }   

                            String cod=this.codArticulo.getText();
                            String nome=this.nomArticulo.getText();
                            int val=(int)this.stock.getValue();
                            String Stock;

                            if(val<=0){
                                Stock="1";
                            }
                            else{
                                Stock=val+"";
                            }   

                            double iv=Double.parseDouble(this.precio.getText())*0.21;

                            Redondear rd = new Redondear();

                            double fin =rd.redondearDecimales(iv);
                            String iva=fin+"";
                            double SinIVA=Double.parseDouble(this.precio.getText());
                            String ConIVA=(Double.parseDouble(this.precio.getText())+fin)+"";

                            /*Insertar datos Productos*/
                            System.out.println("Insertando producto en DB");

                            con.insert("productos", "cod, nombre, descripcion, codCategoria, precioSin, stock", "'"+cod+"', "+"'"+nome+"', "+"'"+this.descripcion.getText()+"', "+" "+codCategoria+", "+SinIVA+", "+Stock);

                            Object Datos[]={cod, nome,(String)categoria.getSelectedItem(), Stock, SinIVA, iva, ConIVA};
                            modelo.addRow(Datos);

                            this.errores.setText("");
                            this.codArticulo.setText("");
                            this.nomArticulo.setText("");
                            this.precio.setText("");
                            this.stock.setValue(0);
                            this.descripcion.setText("");
                            this.img1.setText("");
                            this.img2.setText("");

                        break;

                        case 1:

                            this.errores.setText("Lo sentimos, compruebe los campos númerico");
                            System.err.println("Error de campos numericos");

                        break;

                        case 2:

                            this.errores.setText("El código de artículo se encuentra repetido");
                            this.codArticulo.setText("");
                            System.err.println("El cod Articulo esta repetido");

                        break;


                    }

                }

            }catch(SQLException ex){
                this.errores.setText("Lo sentimos, acabamos de sufrir un error");
                System.err.println("Error en Añadir Productos");
            }
        
        }
        
    }//GEN-LAST:event_stockKeyPressed

    private void volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverActionPerformed
        dispose();
    }//GEN-LAST:event_volverActionPerformed
    
    private void buscarIMG(int numero_btn){
        
        //Mostrar la ventana para abrir archivo y recoger la respuesta
        JFileChooser fc = new JFileChooser();
        
        //Crear filtro para Imagenes 
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Imágenes", "bmp", "gif", "jpg", "png");
        fc.setFileFilter(filter);
                
        int respuesta = fc.showOpenDialog(this);
        
        //Comprobar si se ha pulsado Aceptar
        if (respuesta == JFileChooser.APPROVE_OPTION) {
            
            File archivoElegido = fc.getSelectedFile();
            System.out.println("Seleccionando o archivo: "+archivoElegido);
            
            //Colocar Dir en Campo de Texto
            if(this.img1.getText().isEmpty()){
                this.img1.setText(" "+archivoElegido);
            }
            else if(this.img2.getText().isEmpty()){
                this.img2.setText(" "+archivoElegido);
            }
            else{
                
                if(numero_btn==1){
                    this.img1.setText(" "+archivoElegido);
                }
                else{
                    this.img2.setText(" "+archivoElegido);
                }
            
            }
               
        }
        
    }
    
    private void btn_img1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_img1ActionPerformed
        
        buscarIMG(1);
        
    }//GEN-LAST:event_btn_img1ActionPerformed
        
    private void btn_img2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_img2ActionPerformed
        
        buscarIMG(2);

    }//GEN-LAST:event_btn_img2ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        this.errores.setText("");
        this.codArticulo.setText("");
        this.nomArticulo.setText("");
        this.precio.setText("");
        this.stock.setValue(0);
        this.descripcion.setText("");
        this.img1.setText("");
        this.img2.setText("");
        
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaAnadirProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaAnadirProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaAnadirProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaAnadirProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PaAnadirProductos dialog = new PaAnadirProductos(new javax.swing.JDialog(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton anadir;
    private javax.swing.JButton btn_img1;
    private javax.swing.JButton btn_img2;
    private javax.swing.JComboBox<String> categoria;
    private javax.swing.JTextField codArticulo;
    private javax.swing.JTextField descripcion;
    private javax.swing.JLabel errores;
    private javax.swing.JTextField img1;
    private javax.swing.JTextField img2;
    private javax.swing.JLabel jLCArticulo;
    private javax.swing.JLabel jLCategoria;
    private javax.swing.JLabel jLDescripcion;
    private javax.swing.JLabel jLImagenes;
    private javax.swing.JLabel jLNArticulo;
    private javax.swing.JLabel jLPrecioSIVA;
    private javax.swing.JLabel jLStock;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nomArticulo;
    private javax.swing.JTextField precio;
    private javax.swing.JTable productos;
    private javax.swing.JSpinner stock;
    private javax.swing.JButton volver;
    // End of variables declaration//GEN-END:variables
}
